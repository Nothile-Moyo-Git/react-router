{"version":3,"file":"static/js/268.33f7a2ea.chunk.js","mappings":"qMAMA,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAU,OAAf,SAAuBD,EAAME,UACrC,E,SC4DD,EA1DkB,SAACF,GACjB,IAAMG,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAErB,GAAoCE,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OACE,iCACE,SAAC,KAAD,CACEC,MAAqB,IAAfF,EACNG,QAAS,SAACC,GACR,MAAO,qEACN,KAEL,SAAC,EAAD,CAAMV,UAAU,qCAAhB,UACE,kBAAMW,QAbe,WACzBJ,GAAc,EACf,EAWwCP,UAAU,aAAaY,SA5BhE,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBb,EAAec,QAAQC,MACvCC,EAAcd,EAAaY,QAAQC,MAIzClB,EAAMoB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GACjD,EAmBK,UACGnB,EAAMuB,YACL,gBAAKtB,UAAU,UAAf,UACE,SAACuB,EAAA,EAAD,OAIJ,iBAAKvB,UAAU,UAAf,WACE,kBAAOwB,QAAQ,SAAf,qBACA,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKzB,QAEtC,iBAAKF,UAAU,UAAf,WACE,kBAAOwB,QAAQ,OAAf,mBACA,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKvB,QAEpC,gBAAKJ,UAAU,UAAf,UACE,mBAAQA,UAAU,MAAM6B,QAjCJ,WAC5BtB,GAAc,EACf,EA+BS,gCAMX,E,kBClCD,EAtBiB,SAACR,GAEd,OAAgC+B,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,GAAUC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,YAAU,WACS,cAAXH,GACAC,EAAQG,KAAK,UAEpB,GAAC,CAACJ,EAAQC,IAMX,OACI,+BACI,SAAC,EAAD,CAAWZ,UAAsB,YAAXW,EAAsBd,WAN5B,SAACmB,GACrBN,EAAYM,EACf,KAOJ,C","sources":["components/UI/Card.js","components/quotes/QuoteForm.js","components/pages/NewQuote.js"],"sourcesContent":["import './Card.scss';\n\nconst Card = (props) => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport './QuoteForm.scss';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  const [isEntering, setIsEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText});\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  return (\n    <>\n      <Prompt \n        when={isEntering === true} \n        message={(location) => {\n          return 'Are you sure you want to leave? All your entered data will be lost!';\n          }}\n        />\n      <Card className=\"card card--container card--gap-top\">\n        <form onFocus={formFocusedHandler} className=\"quote-form\" onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className=\"loading\">\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className=\"control\">\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className=\"control\">\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className=\"actions\">\n            <button className='btn' onClick={finishEnteringHandler}>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from '../quotes/QuoteForm';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport useHttp from '../../hooks/use-http'\r\nimport { addQuote } from '../../lib/api';\r\n\r\nconst NewQuote = (props) => {\r\n\r\n    const { sendRequest, status } = useHttp(addQuote);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes');\r\n        }\r\n    },[status, history]);\r\n\r\n    const addQuoteHandler = (quoteData) => {\r\n        sendRequest(quoteData);\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewQuote;"],"names":["props","className","children","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","when","message","location","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"sourceRoot":""}